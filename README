1. Участники:
  1. Софья Буланова (тимлид) 
  2. Дмитрий Сысоев
  3. Денис Рузайкин
2. Описание выбранной идеи решения:
   В main будет  цикл while, с выборами: регистрировать пользователя, 
   войти пользователю в чат, отправить сообщение всем пользователям, 
   отправить конкретному пользователю и показать список пользователей. 
   Также есть опции выхода из чата и проверки почты.
   
   Будет класс пользователей: регистрация, вход в чат и т.д. будут 
   методами класса. Пользователи будут храниться в классе динамического массива, 
   для которого определены конструктор по умолчанию, конструктор копирования и 
   обычный конструктор.
   
3. Описание пользовательских типов и функций в проекте:
  I. Класс пользователя -- ChatUser
    a) Содержит конструктор по умолчанию ChatUser(), создает дефолтного пользователя
    b) Функции-геттеры getUsername(), getPassword() и getLogin() -- возвращают
    имя пользователя, пароль и логин соответственно.
    
  II. Класс динамического массива -- ChatArray
    a) содержит конструктор по умолчанию, создает пустой чат: ChatArray();
    b) Конструктор с параметрами ChatArray(std::vector<ChatUser> usrs), получает 
    вектор пользователей чата
    c) Конструктор копирования ChatArray::ChatArray(ChatArray &ch), получает объект 
    класса ChatArray
    d) Деструктор, удаляющий вектор пользователей и вектор сообщений
    e) Добавление пользователя: addUser(ChatUser user)
    f) Вход пользователя по юзернейму и паролю: authenticateUser(std::string username, std::string password)
    g) Регистрация нового пользователя registerUser(std::string username, std::string password, std::string login)
    h) Отправка сообщений конкретному пользователю: sendMessage(std::string sender, std::string recipient, std::string message)
    i) Отправка сообщений всем пользователям: broadcastMessage(std::string sender, std::string message)
    j) Вывод всех сообщений: printMessages(std::string recipient)
4. Как были распределены задачи в команде:
  1. Софья -- класс динамического массива + main.cpp 
  2. Дмитрий -- класс пользователя и функционал класса
  3. Денис -- реализация шаблонов и исключений, тестирование и дополнение main.cpp
  
5. Update к задаче на 21 июня 2023 года: 
	1. Добавлен файл Makefile, автоматизация процесса сборки
	2. Добавлена функция загрузки файлов с историей сообщений и базой данных пользователей
	3. При регистрации пользователь добавляется в базу данных
	4. При запуске приложения восстанавливаются исходные данные -- пользователи и история сообщений
	5. При отправлении сообщения сообщение записывается в файл
